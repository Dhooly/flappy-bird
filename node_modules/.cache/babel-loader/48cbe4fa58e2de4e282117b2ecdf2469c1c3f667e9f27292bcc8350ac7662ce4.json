{"ast":null,"code":"var _jsxFileName = \"/home/daniel/javascript/React-projects/flappy-bird/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GRAVITY = 3;\nfunction App() {\n  _s();\n  const intervalId = useRef(null);\n  const canvasRef = useRef(null);\n  const [position, setPosition] = useState(230);\n  const [deltaY, setDeltaY] = useState(GRAVITY);\n  const [startGame, setStartGame] = useState(false);\n  useEffect(() => {\n    if (startGame) {\n      intervalId.current = setInterval(() => runGame(), 500);\n    }\n    return () => {\n      if (intervalId.current) {\n        clearInterval(intervalId.current);\n      }\n    };\n  }, [startGame, position, deltaY]);\n  const updatePosition = () => {};\n  const runGame = () => {\n    if (canvasRef.current) {\n      const ctx = canvasRef.current.getContext('2d');\n      if (ctx) {\n        console.log(position);\n        console.log(deltaY);\n        ctx === null || ctx === void 0 ? void 0 : ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);\n        ctx === null || ctx === void 0 ? void 0 : ctx.fillRect(0, position, 20, 20);\n      }\n    }\n    setPosition(prevPos => prevPos - deltaY);\n    setDeltaY(prevDelX => prevDelX - GRAVITY);\n  };\n  const jump = () => {\n    setDeltaY(20);\n    setPosition(prevPos => prevPos + deltaY);\n  };\n  const handleEvent = () => {\n    if (!startGame) {\n      setStartGame(true);\n    }\n    jump();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onKeyDown: handleEvent,\n    onClick: handleEvent,\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 500,\n      height: 500\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+ggtecpKfZhkgCcniiVt3tJIgPI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useRef","useState","useEffect","GRAVITY","App","intervalId","canvasRef","position","setPosition","deltaY","setDeltaY","startGame","setStartGame","current","setInterval","runGame","clearInterval","updatePosition","ctx","getContext","console","log","clearRect","window","innerWidth","innerHeight","fillRect","prevPos","prevDelX","jump","handleEvent"],"sources":["/home/daniel/javascript/React-projects/flappy-bird/src/App.tsx"],"sourcesContent":["import { useRef, useState, useEffect } from 'react'\nimport './App.css'\n\nconst GRAVITY = 3\n\nfunction App() {\n  const intervalId = useRef<NodeJS.Timer | null>(null)\n  const canvasRef = useRef<HTMLCanvasElement | null>(null)\n  const [position, setPosition] = useState(230)\n  const [deltaY, setDeltaY] = useState(GRAVITY)\n  const [startGame, setStartGame] = useState(false)\n\n\n  useEffect(() => {\n    if (startGame) {\n      intervalId.current = setInterval(() => runGame(), 500)\n    }\n\n    return () => {\n      if (intervalId.current) {\n        clearInterval(intervalId.current)\n      }\n    }\n  }, [startGame, position, deltaY])\n\n  const updatePosition = () => {\n  }\n\n  const runGame = () => {\n    if (canvasRef.current) {\n      const ctx = canvasRef.current.getContext('2d')\n\n      if (ctx) {\n        console.log(position)\n        console.log(deltaY)\n        ctx?.clearRect(0, 0, window.innerWidth, window.innerHeight)\n        ctx?.fillRect(0, position, 20, 20)\n      }\n    }\n\n    setPosition((prevPos) => prevPos - deltaY)\n    setDeltaY((prevDelX) => prevDelX - GRAVITY)\n  }\n\n  const jump = () => {\n    setDeltaY(20)\n    setPosition((prevPos) => prevPos + deltaY)\n  }\n\n  const handleEvent = () => {\n    if (!startGame) {\n      setStartGame(true)\n    }\n\n    jump()\n  }\n\n\n  return (\n    <div onKeyDown={handleEvent} onClick={handleEvent}>\n      <canvas ref={canvasRef} width={500} height={500} />\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACnD,OAAO,WAAW;AAAA;AAElB,MAAMC,OAAO,GAAG,CAAC;AAEjB,SAASC,GAAG,GAAG;EAAA;EACb,MAAMC,UAAU,GAAGL,MAAM,CAAsB,IAAI,CAAC;EACpD,MAAMM,SAAS,GAAGN,MAAM,CAA2B,IAAI,CAAC;EACxD,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,GAAG,CAAC;EAC7C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAACE,OAAO,CAAC;EAC7C,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAGjDC,SAAS,CAAC,MAAM;IACd,IAAIS,SAAS,EAAE;MACbN,UAAU,CAACQ,OAAO,GAAGC,WAAW,CAAC,MAAMC,OAAO,EAAE,EAAE,GAAG,CAAC;IACxD;IAEA,OAAO,MAAM;MACX,IAAIV,UAAU,CAACQ,OAAO,EAAE;QACtBG,aAAa,CAACX,UAAU,CAACQ,OAAO,CAAC;MACnC;IACF,CAAC;EACH,CAAC,EAAE,CAACF,SAAS,EAAEJ,QAAQ,EAAEE,MAAM,CAAC,CAAC;EAEjC,MAAMQ,cAAc,GAAG,MAAM,CAC7B,CAAC;EAED,MAAMF,OAAO,GAAG,MAAM;IACpB,IAAIT,SAAS,CAACO,OAAO,EAAE;MACrB,MAAMK,GAAG,GAAGZ,SAAS,CAACO,OAAO,CAACM,UAAU,CAAC,IAAI,CAAC;MAE9C,IAAID,GAAG,EAAE;QACPE,OAAO,CAACC,GAAG,CAACd,QAAQ,CAAC;QACrBa,OAAO,CAACC,GAAG,CAACZ,MAAM,CAAC;QACnBS,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEI,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEC,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;QAC3DP,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEQ,QAAQ,CAAC,CAAC,EAAEnB,QAAQ,EAAE,EAAE,EAAE,EAAE,CAAC;MACpC;IACF;IAEAC,WAAW,CAAEmB,OAAO,IAAKA,OAAO,GAAGlB,MAAM,CAAC;IAC1CC,SAAS,CAAEkB,QAAQ,IAAKA,QAAQ,GAAGzB,OAAO,CAAC;EAC7C,CAAC;EAED,MAAM0B,IAAI,GAAG,MAAM;IACjBnB,SAAS,CAAC,EAAE,CAAC;IACbF,WAAW,CAAEmB,OAAO,IAAKA,OAAO,GAAGlB,MAAM,CAAC;EAC5C,CAAC;EAED,MAAMqB,WAAW,GAAG,MAAM;IACxB,IAAI,CAACnB,SAAS,EAAE;MACdC,YAAY,CAAC,IAAI,CAAC;IACpB;IAEAiB,IAAI,EAAE;EACR,CAAC;EAGD,oBACE;IAAK,SAAS,EAAEC,WAAY;IAAC,OAAO,EAAEA,WAAY;IAAA,uBAChD;MAAQ,GAAG,EAAExB,SAAU;MAAC,KAAK,EAAE,GAAI;MAAC,MAAM,EAAE;IAAI;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAC/C;AAEV;AAAC,GA1DQF,GAAG;AAAA,KAAHA,GAAG;AA4DZ,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}